"use strict";
/********************************************************************************
 * Copyright (C) 2019 Ericsson and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __values = (this && this.__values) || function (o) {
    var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
    if (m) return m.call(o);
    return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = require("inversify");
var browser_1 = require("@theia/core/lib/browser");
var workspace_service_1 = require("@theia/workspace/lib/browser/workspace-service");
var folder_preference_provider_1 = require("./folder-preference-provider");
var common_1 = require("@theia/filesystem/lib/common");
var uri_1 = require("@theia/core/lib/common/uri");
var FoldersPreferencesProvider = /** @class */ (function (_super) {
    __extends(FoldersPreferencesProvider, _super);
    function FoldersPreferencesProvider() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.providers = [];
        return _this;
    }
    FoldersPreferencesProvider.prototype.init = function () {
        return __awaiter(this, void 0, void 0, function () {
            var e_1, _a, _b, _c, root, provider, e_1_1;
            var _this = this;
            return __generator(this, function (_d) {
                switch (_d.label) {
                    case 0: return [4 /*yield*/, this.workspaceService.roots];
                    case 1:
                        _d.sent();
                        if (!this.workspaceService.saved) return [3 /*break*/, 9];
                        _d.label = 2;
                    case 2:
                        _d.trys.push([2, 7, 8, 9]);
                        _b = __values(this.workspaceService.tryGetRoots()), _c = _b.next();
                        _d.label = 3;
                    case 3:
                        if (!!_c.done) return [3 /*break*/, 6];
                        root = _c.value;
                        return [4 /*yield*/, this.fileSystem.exists(root.uri)];
                    case 4:
                        if (_d.sent()) {
                            provider = this.createFolderPreferenceProvider(root);
                            this.providers.push(provider);
                        }
                        _d.label = 5;
                    case 5:
                        _c = _b.next();
                        return [3 /*break*/, 3];
                    case 6: return [3 /*break*/, 9];
                    case 7:
                        e_1_1 = _d.sent();
                        e_1 = { error: e_1_1 };
                        return [3 /*break*/, 9];
                    case 8:
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_1) throw e_1.error; }
                        return [7 /*endfinally*/];
                    case 9:
                        // Try to read the initial content of the preferences.  The provider
                        // becomes ready even if we fail reading the preferences, so we don't
                        // hang the preference service.
                        Promise.all(this.providers.map(function (p) { return p.ready; }))
                            .then(function () { return _this._ready.resolve(); })
                            .catch(function () { return _this._ready.resolve(); });
                        this.workspaceService.onWorkspaceChanged(function (roots) {
                            var e_2, _a;
                            try {
                                for (var roots_1 = __values(roots), roots_1_1 = roots_1.next(); !roots_1_1.done; roots_1_1 = roots_1.next()) {
                                    var root = roots_1_1.value;
                                    if (!_this.existsProvider(root.uri)) {
                                        var provider = _this.createFolderPreferenceProvider(root);
                                        if (!_this.existsProvider(root.uri)) {
                                            _this.providers.push(provider);
                                        }
                                        else {
                                            provider.dispose();
                                        }
                                    }
                                }
                            }
                            catch (e_2_1) { e_2 = { error: e_2_1 }; }
                            finally {
                                try {
                                    if (roots_1_1 && !roots_1_1.done && (_a = roots_1.return)) _a.call(roots_1);
                                }
                                finally { if (e_2) throw e_2.error; }
                            }
                            var numProviders = _this.providers.length;
                            var _loop_1 = function (ind) {
                                var provider = _this.providers[ind];
                                if (roots.findIndex(function (r) { return !!provider.uri && r.uri === provider.uri.toString(); }) < 0) {
                                    _this.providers.splice(ind, 1);
                                    provider.dispose();
                                }
                            };
                            for (var ind = numProviders - 1; ind >= 0; ind--) {
                                _loop_1(ind);
                            }
                        });
                        return [2 /*return*/];
                }
            });
        });
    };
    FoldersPreferencesProvider.prototype.existsProvider = function (folderUri) {
        return this.providers.findIndex(function (p) { return !!p.uri && p.uri.toString() === folderUri; }) >= 0;
    };
    // tslint:disable-next-line:no-any
    FoldersPreferencesProvider.prototype.getPreferences = function (resourceUri) {
        var numProviders = this.providers.length;
        if (resourceUri && numProviders > 0) {
            var provider = this.getProvider(resourceUri);
            if (provider) {
                return provider.getPreferences();
            }
        }
        return {};
    };
    FoldersPreferencesProvider.prototype.canProvide = function (preferenceName, resourceUri) {
        if (resourceUri && this.providers.length > 0) {
            var provider = this.getProvider(resourceUri);
            if (provider) {
                return { priority: provider.canProvide(preferenceName, resourceUri).priority, provider: provider };
            }
        }
        return _super.prototype.canProvide.call(this, preferenceName, resourceUri);
    };
    FoldersPreferencesProvider.prototype.getProvider = function (resourceUri) {
        var e_3, _a;
        var provider;
        var relativity = Number.MAX_SAFE_INTEGER;
        try {
            for (var _b = __values(this.providers), _c = _b.next(); !_c.done; _c = _b.next()) {
                var p = _c.value;
                if (p.uri) {
                    var providerRelativity = p.uri.path.relativity(new uri_1.default(resourceUri).path);
                    if (providerRelativity >= 0 && providerRelativity <= relativity) {
                        relativity = providerRelativity;
                        provider = p;
                    }
                }
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_3) throw e_3.error; }
        }
        return provider;
    };
    FoldersPreferencesProvider.prototype.createFolderPreferenceProvider = function (folder) {
        var _this = this;
        var provider = this.folderPreferenceProviderFactory({ folder: folder });
        this.toDispose.push(provider);
        this.toDispose.push(provider.onDidPreferencesChanged(function (change) { return _this.onDidPreferencesChangedEmitter.fire(change); }));
        return provider;
    };
    // tslint:disable-next-line:no-any
    FoldersPreferencesProvider.prototype.setPreference = function (key, value, resourceUri) {
        return __awaiter(this, void 0, void 0, function () {
            var e_4, _a, _b, _c, provider, providerResourceUri, e_4_1;
            return __generator(this, function (_d) {
                switch (_d.label) {
                    case 0:
                        if (!resourceUri) return [3 /*break*/, 9];
                        _d.label = 1;
                    case 1:
                        _d.trys.push([1, 6, 7, 8]);
                        _b = __values(this.providers), _c = _b.next();
                        _d.label = 2;
                    case 2:
                        if (!!_c.done) return [3 /*break*/, 5];
                        provider = _c.value;
                        return [4 /*yield*/, provider.getUri()];
                    case 3:
                        providerResourceUri = _d.sent();
                        if (providerResourceUri && providerResourceUri.toString() === resourceUri) {
                            return [2 /*return*/, provider.setPreference(key, value)];
                        }
                        _d.label = 4;
                    case 4:
                        _c = _b.next();
                        return [3 /*break*/, 2];
                    case 5: return [3 /*break*/, 8];
                    case 6:
                        e_4_1 = _d.sent();
                        e_4 = { error: e_4_1 };
                        return [3 /*break*/, 8];
                    case 7:
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_4) throw e_4.error; }
                        return [7 /*endfinally*/];
                    case 8:
                        console.error("FoldersPreferencesProvider did not find the provider for " + resourceUri + " to update the preference " + key);
                        return [3 /*break*/, 10];
                    case 9:
                        console.error('FoldersPreferencesProvider requires resource URI to update preferences');
                        _d.label = 10;
                    case 10: return [2 /*return*/];
                }
            });
        });
    };
    __decorate([
        inversify_1.inject(workspace_service_1.WorkspaceService),
        __metadata("design:type", workspace_service_1.WorkspaceService)
    ], FoldersPreferencesProvider.prototype, "workspaceService", void 0);
    __decorate([
        inversify_1.inject(common_1.FileSystem),
        __metadata("design:type", Object)
    ], FoldersPreferencesProvider.prototype, "fileSystem", void 0);
    __decorate([
        inversify_1.inject(folder_preference_provider_1.FolderPreferenceProviderFactory),
        __metadata("design:type", Function)
    ], FoldersPreferencesProvider.prototype, "folderPreferenceProviderFactory", void 0);
    __decorate([
        inversify_1.postConstruct(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", Promise)
    ], FoldersPreferencesProvider.prototype, "init", null);
    FoldersPreferencesProvider = __decorate([
        inversify_1.injectable()
    ], FoldersPreferencesProvider);
    return FoldersPreferencesProvider;
}(browser_1.PreferenceProvider));
exports.FoldersPreferencesProvider = FoldersPreferencesProvider;
//# sourceMappingURL=folders-preferences-provider.js.map