/********************************************************************************
 * Copyright (C) 2018 Red Hat, Inc. and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
import * as express from 'express';
import { ILogger } from '@theia/core';
import { BackendApplicationContribution } from '@theia/core/lib/node/backend-application';
import { PluginMetadata } from '../../common/plugin-protocol';
export declare class HostedPluginReader implements BackendApplicationContribution {
    protected readonly logger: ILogger;
    private readonly scanner;
    private readonly hostedPlugin;
    private readonly metadataProcessors;
    /**
     * Map between a plugin's id and the local storage
     */
    private pluginsIdsFiles;
    initialize(): void;
    configure(app: express.Application): void;
    getPluginMetadata(pluginPath: string): Promise<PluginMetadata | undefined>;
    /**
     * MUST never throw to isolate plugin deployment
     */
    protected doGetPluginMetadata(pluginPath: string | undefined): Promise<PluginMetadata | undefined>;
    protected loadPluginMetadata(pluginPath: string): Promise<PluginMetadata | undefined>;
    getPlugin(): Promise<PluginMetadata | undefined>;
    protected loadManifest(pluginPath: string): Promise<any>;
    protected loadTranslations(pluginPath: string): Promise<any>;
    protected localize(value: any, translations: {
        [key: string]: string;
    }): any;
    static NLS_REGEX: RegExp;
}
//# sourceMappingURL=plugin-reader.d.ts.map