/********************************************************************************
 * Copyright (C) 2018 Red Hat, Inc. and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
import { PluginContribution } from '../../common';
import { PreferenceSchema, PreferenceSchemaProperties } from '@theia/core/lib/browser/preferences';
import { MonacoSnippetSuggestProvider } from '@theia/monaco/lib/browser/monaco-snippet-suggest-provider';
import { PluginSharedStyle } from './plugin-shared-style';
import { CommandRegistry } from '@theia/core';
export declare class PluginContributionHandler {
    private injections;
    private readonly grammarsRegistry;
    private readonly viewRegistry;
    private readonly menusContributionHandler;
    private readonly preferenceSchemaProvider;
    private readonly monacoTextmateService;
    private readonly keybindingsContributionHandler;
    protected readonly snippetSuggestProvider: MonacoSnippetSuggestProvider;
    protected readonly commands: CommandRegistry;
    protected readonly style: PluginSharedStyle;
    handleContributions(contributions: PluginContribution): void;
    protected pluginCommandIconId: number;
    protected registerCommands(contribution: PluginContribution): void;
    private updateConfigurationSchema;
    protected updateDefaultOverridesSchema(configurationDefaults: PreferenceSchemaProperties): void;
    private createRegex;
    private convertIndentationRules;
    private convertFolding;
    private convertTokenTypes;
    private convertEmbeddedLanguages;
    protected validateConfigurationSchema(schema: PreferenceSchema): void;
    private validateDefaultValue;
}
//# sourceMappingURL=plugin-contribution-handler.d.ts.map